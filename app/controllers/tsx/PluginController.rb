module TSX
  module Controllers
    module Plugin

      def save_voting(data = nil)
        Vote.create(
            bot: @tsx_bot.id,
            username: hb_client.username
        )
        update_message "#{icon(@tsx_bot.icon_success)} –°–ø–∞—Å–∏–±–æ! –í–∞—à –≥–æ–ª–æ—Å –æ—á–µ–Ω—å –≤–∞–∂–µ–Ω, —Ç–∞–∫ –∫–∞–∫ –æ–Ω —É—á–∞—Å—Ç–≤—É–µ—Ç –≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏ –∑–∞ *–õ—É—á—à–∏–π –ë–æ—Ç –ú–µ—Å—è—Ü–∞*. –õ—É—á—à–∏–π –±–æ—Ç –±—É–¥–µ—Ç –æ—Å–æ–±–æ –æ—Ç–º–µ—á–µ–Ω –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ *–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º*. –í—Å–µ–≥–æ –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–æ *#{ludey(Vote::voted_this_month)}*."
      end

      def save_lottery(data)
        gam = sget('tsx_game')
        Bet.create(
            number: data.to_i,
            client: hb_client.id,
            game: gam.id
        )
        update_message "#{icon(@tsx_bot.icon_success)} –í—ã –≤—ã–±—Ä–∞–ª–∏ —á–∏—Å–ª–æ *#{data}*. –ö–æ–≥–¥–∞ —Ä—É–ª–µ—Ç–∫–∞ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è, –ø–æ–±–µ–¥–∏—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç *#{@tsx_bot.amo(gam.conf('amount'))}*"
      end

      def save_question
        Answer.create(
            answer: data.to_s,
            client: hb_client.id,
            game: @tsx_bot.active_game.id
        )
        update_message "#{icon(@tsx_bot.icon_success)} –í—ã –ø–æ—É—á–∞—Å—Ç–≤–æ–≤–∞–ª–∏ –≤ –æ–ø—Ä–æ—Å–µ –∫–ª–∏–µ–Ω—Ç–æ–∞. –í–∞—à–µ –º–Ω–µ–Ω–∏–µ –¥–ª—è –Ω–∞—Å –≤–∞–∂–Ω–æ!*."
      end

      def prize_lottery(game)
        @gam = game
        if @gam.available_numbers.count < 1
          rec = Bet.where(game: @gam.id).limit(1).order(Sequel.lit('RANDOM()')).all
          winner = Client[rec.first.client]
          winner_num = Bet[rec.first.id].number
          @gam.winner = winner.id
          @gam.save
          @tsx_bot.say(winner.tele, "üö®üö®üö® *–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!* –í—ã–±—Ä–∞–Ω–Ω—ã–π –í–∞–º–∏ –Ω–æ–º–µ—Ä *#{winner_num}* –≤—ã–∏–≥—Ä–∞–ª –≤ —Ä—É–ª–µ—Ç–∫—É! –í—ã –ø–æ–ª—É—á–∏–ª–∏ *#{@tsx_bot.active_game.conf('prize')}*. –ñ–¥–µ–º –≤ –ê–ø—Ç–µ–∫–µ –≤—Å–µ–≥–¥–∞!")
          winner.cashin(@tsx_bot.active_game.conf('amount'), Client::__cash, Meth::__cash, @tsx_bot.beneficiary, "–í—ã–∏–≥—Ä—ã—à –≤ —Ä—É–ª–µ—Ç–∫—É. –ü–æ–±–µ–¥–∞ —á–∏—Å–ª–∞ *#{winner_num}*.")
          Spam.create(bot: @tsx_bot.id, kind: Spam::BOT_CLIENTS, label: '–ü–æ–±–µ–¥–∞ —á–∏—Å–ª–∞ –≤ –ª–æ—Ç–µ—Ä–µ—é', text: "üö®üö®üö® –î–æ—Ä–æ–≥–∏–µ –¥—Ä—É–∑—å—è! –ü–æ–±–µ–¥–∏–ª–æ —á–∏—Å–ª–æ *#{winner_num}*. –ö–ª–∏–µ–Ω—Ç—É —Å –Ω–∏–∫–æ–º @#{winner.username} –ø–æ–ø–æ–ª–Ω–µ–Ω –±–∞–ª–∞–Ω—Å –Ω–∞ #{@tsx_bot.active_game.conf('amount')}", status: Spam::NEW)
          puts "DEACTIVATING GAME".colorize(:white_on_red)
          @gam.update(status: Gameplay::GAMEOVER)
        end
      end

      def play_game
        cur_game = @tsx_bot.active_game
        cur_game.update(last_run: Time.now) if !cur_game.nil?
        puts cur_game.inspect
        if cur_game.nil?
          puts "GAME IS NIL".blue
          serp
        elsif !cur_game.can_post?(hb_client)
          puts "CANNOT POST NOW".blue
          serp
        else
          puts "CANPOST. UPDATING GAME LAST RUN".blue
          sset("tsx_game", cur_game)
          reply_inline "welcome/#{cur_game.title}", gam: cur_game, b: @tsx_bot
          cur_game.inc
          if !cur_game.question?
            puts "NOT A QUESTION".blue
            serp
          else
            handle("save_game_res")
          end
        end
      end

      def save_game_res(data = nil)
        gam = sget('tsx_game')
        puts gam.inspect
        puts "calling save_#{gam.title} method".blue
        public_send("save_#{gam.title}".to_sym, data.to_s)
        sdel('tsx_game')
        serp
      end

    end
  end
end
